#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int prefix[2500 + 1][2500 + 1];

bool cmp(pair<int, int> a, pair<int, int> b) {

    return a.second < b.second;

}

int main() {

    int n;
    cin >> n;


    vector<pair<int, int>> cows(n);
    for(int i = 0; i < n; i++) {

        cin >> cows[i].first >> cows[i].second;

    }

    sort(cows.begin(), cows.end());
    for(int i = 0; i < n; i++) {

        cows[i].first = i + 1;

    }

    sort(cows.begin(), cows.end(), cmp);

    for(int i = 0; i < n; i++) {

        cows[i].second = i + 1;

    }

    sort(cows.begin(), cows.end());

    for(int i = 0; i < n; i++) {
        prefix[cows[i].first][cows[i].second] = 1;

    }



    for(int i = 1; i <= n; i++) {

        for(int j = 1; j <= n; j++) {

            prefix[i][j] += prefix[i - 1][j] + prefix[i][j - 1] - prefix[i - 1][j - 1];

        }

    }

    ll ans = 0;

    for(int i = 0; i < n ; i++) {

        for(int j = i + 1  ; j < n; j++) {

            ll top = min(cows[i].second, cows[j].second);
            ll bottom = max(cows[i].second, cows[j].second);
            ll left = i + 1;
            ll right = j + 1;
            ll higher = prefix[right][top] - prefix[left][top - 1];
            ll lower = prefix[right][n] - prefix[right][bottom - 1] - prefix[left -1][n] + prefix[left - 1][bottom - 1];

            ans += higher * lower;

        }

    }

    ans += n + 1;
    cout << ans;

}
