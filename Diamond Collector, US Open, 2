#include <bits/stdc++.h>
using namespace std;
typedef long long ll;

int main() {

	freopen("diamond.in", "r", stdin);
	freopen("diamond.out", "w", stdout);

	int n, k;
	cin >> n >> k;

	vector<int> diamonds(n);
	for(int i = 0; i < n; i++) {

		cin >> diamonds[i];

	}
	sort(diamonds.begin(), diamonds.end());

	vector<int> reachable(n);
	int r = 0;
	for(int l = 0; l < n; l++) {

		while(r + 1 < n && diamonds[r + 1] - diamonds[l] <= k) {

			r++;

		}
		reachable[l] = r - l + 1;

	}

	vector<int> maxReachable(n + 1);
	maxReachable[n] = 0;
	for(int i = n - 1; i >= 0; i--) {

		maxReachable[i] = max(maxReachable[i + 1], reachable[i]);

	}

	int ans = 0;
	for(int i = 0; i < n; i++) {

		ans = max(ans, reachable[i] + maxReachable[i + reachable[i]]);

	}

	cout << ans;

}
